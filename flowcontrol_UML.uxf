<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>42</y>
      <w>258</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>FlowSolver
{Some Properties}
--
-Geometry
-Solver
-Time
-Save
--
init()
step()
compute_steady_state()
--
+ should time and save be classes or just attributes?
+ clarify whether perturbations or not</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>138</x>
      <y>246</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Geometry
--
- Subdomains
- Mesh</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>366</x>
      <y>246</y>
      <w>126</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>Solver
Package::FatClass
{Some Properties}
--
- VariationalFormulation
- Primitives
- FunctionSpaces
- SolverType
--
make_function_spaces()
--
compute_steady_state()
load_steady_state()
make_form_steady()
--
init_time_stepping()
--
make_solvers()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>534</x>
      <y>282</y>
      <w>84</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>TimeStepper
--
- InitialCondition
- Tf, T0, dt...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>654</x>
      <y>246</y>
      <w>96</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>Saver
--
- TimeSeries
- ExportOptions
-- save_every: int
-- save_path: Path
--
define_paths()
log_timeseries()
print_progress()
print_summary()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>294</x>
      <y>534</y>
      <w>150</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>ControlFormulation
--
- Actuator
- Sensor
--
Somehow ControlFormulation could override
the BCs already given
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>648</y>
      <w>228</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Actuator
--
make_actuator()
is_boundary_or_field()
	-- in equations, add int((f,v)dv) and set nonnull value
	to f in case of field actuator, else do 
	boundary conditions (defined in this func?)
--
&gt;&gt; written by user
&gt;&gt; depends on actuator type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>648</y>
      <w>168</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Sensor
--
get_info()
get_value()
--
&gt;&gt; written by user
&gt;&gt; depends on sensor type

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>330</y>
      <w>84</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>258</x>
      <y>594</y>
      <w>108</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>384</x>
      <y>594</y>
      <w>90</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>474</y>
      <w>120</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
knows about</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>366</x>
      <y>384</y>
      <w>96</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
knows about</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>198</y>
      <w>84</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>198</y>
      <w>126</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>198</y>
      <w>42</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>198</x>
      <y>198</y>
      <w>228</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>360.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>432</y>
      <w>126</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Mesh
--
make_mesh()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>126</x>
      <y>330</y>
      <w>66</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m2=1</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>432</y>
      <w>150</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Subdomains
--
- BoundaryConditions: dataFrame
--
make_subdomains()
make_bcs()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>648</x>
      <y>60</y>
      <w>162</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>Utils
--
- compute_energy()
- compute_force_coefficients()
- get_A()
- get_B() [written by user]
- get_C() [written by user]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>480</x>
      <y>534</y>
      <w>234</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>+ ControlFormulation.Sensor: need to know FunctionSpaces and Primitives, 
but they most likely are fixed in incompressible 2D
+ ControlFormulation.Actuator: if bc, knows about subdomains (overload subd+bc);
if not, does not need to know anything
style=wordwrap
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
