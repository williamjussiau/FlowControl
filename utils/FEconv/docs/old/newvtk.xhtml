<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
  <head>
    <meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /> 
    <title>VTK formats</title>
    <link rel="stylesheet" type="text/css" href="estilo.css" />
  </head>
  <body id="top">
    <p>Up: <a href="index.html">Program feconv</a></p>
    <hr /> 

    <h2>VTK formats</h2>

    <p><strong>On this page:</strong></p>
    <ul>
      <li><a href="#desc">Description</a></li>
      <li><a href="#feat">Features supported by feconv</a></li>
      <ul>
        <li><a href="#fetypes">Finite element types</a></li>
        <li><a href="#vord">Node index</a></li>
        <li><a href="#vtk+">VTK+ format</a></li>
      </ul>
    </ul>

    <h3 id="desc">Description</h3>

    <p>The <a href="http://www.vtk.org/">Visualization Toolkit</a> (VTK) is an open-source, freely available software system for 3D computer graphics, image processing and visualization, distributed by <a href="http://www.kitware.com/">Kitware, Inc.</a>.</p>

    <p>The main features of this format are:</p>
    <ul>
      <li>It can save hybrid meshes, that is, meshes that contain a several types of finite elements.</li>
      <li>A mesh can be defined by multiple portions called pieces, each one containing its own coordinates, connectivities and fields.</li>
      <li>The global indexing of nodes, edges, faces and elements are defined by integers. </li>
      <li>The vertex coordinates and field values are defined by floats.</li>
      <li>The precission of each DataSet is defined individually.</li>
    </ul>

    <p>VTK defines two different styles of <a href="http://www.vtk.org/VTK/img/file-formats.pdf">file formats</a>, legacy and XML. VTK Legacy (.vtk extension) is the simplest format and VTK XML is a more sophisticated VTK format that allows data streaming and parallel I/O.</p>

    <p>The Visualization Toolkit supports five different dataset formats: structured points, structured grid, rectilinear grid, unstructured grid, and polygonal data. <code>feconv</code> only admits unstructured grid since it is the most useful dataset to store finite element meshes. In this regard, VTK only permit Lagrange P1 and P2 finite elements.</p>

    <div class="back"><a href="#top">Back to top</a></div>

    <h3 id="feat">Features supported by feconv</h3>

    <p>Feconv can only read and write serial binary VTK XML files containing <em>UnstructuredGrid</em> datasets with extension <em>.vtu</em> </p>

    <h4 id="fetypes">VTK finite element types allowed in feconv</h4>

    <p>The VTK format describes a lot of different types of finite elements. In the following table you can see the finite elements allowed and its meaning in FEconv.</p>

    <p>
    <div align="center">
    <table class="tb" width="80%">
      <thead>
        <tr> <th>VTK descriptor</th> <th align="left">VTK name</th>  <th align="left">FE type</th> <th>dim</th> <th>lnn</th> <th>lnv</th> <th>lne</th> <th>lnf</th> <th>nn&ne;mm</th></tr>
      </thead>
      <tbody>
        <tr><td>1</td> <td align="left">VTK_VERTEX</td> <td align="left">Vertex</td> <td>0</td> <td>1</td>  <td>1</td> <td>0</td> <td>0</td> <td>Yes</td></tr>
        <tr><td>2</td> <td align="left">VTK_POLY_VERTEX</td> <td align="left">Vertex</td> <td>0</td> <td>1</td>  <td>1</td> <td>0</td> <td>0</td><td> Yes</td></tr>
        <tr><td>3</td> <td align="left">VTK_LINE</td> <td align="left">Edge Lagrange P1</td> <td>1</td> <td>2</td>  <td>2</td> <td>1</td> <td>0</td><td> Yes</td></tr>
        <tr><td>5</td> <td align="left">VTK_TRIANGLE</td> <td align="left">Triangle Lagrange P1</td> <td>2</td> <td>3</td>  <td>3</td> <td>3</td> <td>0</td><td> Yes</td> </tr>
        <tr><td>8</td> <td align="left">VTK_PIXEL</td> <td align="left">Quadrilateral Lagrange P1</td> <td>2</td> <td>4</td>  <td>4</td> <td>4</td> <td>0</td><td> Yes</td> </tr>
        <tr><td>9</td> <td align="left">VTK_QUAD</td> <td align="left">Quadrilateral Lagrange P1</td> <td>2</td> <td>4</td>  <td>4</td> <td>4</td> <td>0</td><td> Yes</td> </tr>
        <tr><td>10</td> <td align="left">VTK_TETRA</td> <td align="left">Tetrahedron Lagrange P1</td> <td>3</td> <td>4</td>  <td>4</td> <td>6</td> <td>4</td><td> Yes</td> </tr>
        <tr><td>11</td> <td align="left">VTK_VOXEL</td> <td align="left">Hexahedron Lagrange P1</td> <td>3</td> <td>8</td>  <td>8</td> <td>12</td> <td>6</td><td> Yes</td></tr>
        <tr><td>12</td> <td align="left">VTK_HEXAHEDRON</td> <td align="left">Hexahedron Lagrange P1</td> <td>3</td> <td>8</td>  <td>8</td> <td>12</td> <td>6</td><td> Yes</td></tr>
        <tr><td>13</td> <td align="left">VTK_WEDGE</td> <td align="left">Wedge Lagrange P1</td> <td>3</td> <td>6</td>  <td>6</td> <td>9</td> <td>5</td><td> Yes</td></tr>
        <tr><td>21</td> <td align="left">VTK_QUADRATIC_EDGE</td> <td align="left">Edge Lagrange P2</td> <td>1</td> <td>3</td>  <td>2</td> <td>1</td> <td>0</td><td> No</td></tr>
        <tr><td>22</td> <td align="left">VTK_QUADRATIC_TRIANGLE</td> <td align="left">Triangle Lagrange P2</td> <td>2</td> <td>6</td>  <td>3</td> <td>3</td> <td>0</td><td> No</td> </tr>
        <tr><td>23</td> <td align="left">VTK_QUADRATIC_QUAD</td> <td align="left">Quadrilateral Lagrange P2</td> <td>2</td> <td>8</td>  <td>4</td> <td>4</td> <td>0</td><td> No</td></tr>
        <tr><td>24</td> <td align="left">VTK_QUADRATIC_TETRA</td> <td align="left">Tetrahedron Lagrange P2</td> <td>3</td> <td>10</td>  <td>4</td> <td>4</td> <td>4</td><td> No</td></tr>
        <tr><td>25</td> <td align="left">VTK_QUADRATIC_HEXAHEDRON</td> <td align="left">Hexahedron Lagrange P2</td> <td>3</td> <td>20</td>  <td>8</td> <td>12</td> <td>6</td><td> No</td></tr>
      </tbody>
    </table>
    </div>
    </p>

    <div class="back"><a href="#top">Back to top</a></div>
    
    <h4 id="vord">Local order of nodes</h4>

    <p>The local index of nodes in each element respect the following rules:</p>

    <p align="center"> 
      <div align="center">
            <img src="images/vtk/elp1_ord.png"  width="50%"/>
            <br clear="all" /> 
            <p><span id="fig-1" class="caption"> <strong>Figure 1:</strong> Local index of nodes on Lagrange P1 elements.Note that elements with descriptors 4, 6 and 7 are not supported by feconv.</span></p>
      </div>
    </p>

    <p>
      <div align="center">
            <img src="images/vtk/elp2_ord.png"  width="50%"/>
            <br clear="all" /> 
            <p><span id="fig-2" class="caption"> <strong>Figure 2:</strong> Local index of nodes on Lagrange P2 elements.</span></p>
      </div>
    </p>

    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="vtk+">VTK+ format</h4>
    <p>The previous formats allow us to save the coordinates of the mesh nodes and the connectivity of the finite elements. However, there is not a standard way to save the reference numbering of nodes, edges, faces and elements. Since the VTK formats also permits to save integer fields associated to the mesh, we have proposed the next procedure to consider reference numbering:</p>
    <ol>
      <li>Given an edge or face with a non-zero reference number, include the edge or face as a finite element in the mesh;</li>
      <li>Define the following integer fields:
        <ul>
          <li>the pointdata field  <span class="ok"><em>vertex_ref</em></span>  takes the node reference number in every node of the mesh;</li>
          <li>the celldata field  <span class="ok"><em>edge_ref</em></span>  takes the edge reference number in every edge incorporated to the mesh and zero otherwise;</li>
          <li>the celldata field  <span class="ok"><em>face_ref</em></span>  takes the face reference number in every face incorporated to the mesh and zero otherwise;</li>
          <li>the celldata field  <span class="ok"><em>element_ref</em></span>  takes the element reference number in every mesh element and zero otherwise;</li>
        </ul>
      </li>  
    </ol>
    <p>When a VTK file have these fields its mesh has reference numbers associated to its entities, so its suitable to be used in a finite element solver.</p>
    <p>OpenNum recognizes both VTK legacy and VTK XML formats with the mentioned fields. If you plan to create files of these type, you should use the file extension <em>.vtk+</em> for VTK legacy and <em>.vtu+</em> for VTK XML <em>UnstructuredGrid</em>.</p>

    <div class="back"><a href="#top">Back to top</a></div>




<!--    <hr />
    <p>&copy; 2012 - <a href="http://www.usc.es/ingmat/?lang=en">Ingeniería Matemática</a></p> -->
  </body>
</html>

