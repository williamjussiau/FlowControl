#################################################################
# Makefile created using the tool 'Creamake'
# 
# Creamake is distributed under the GNU GPL license
# Author: Francisco Pena, fran.pena(at)usc.es
# Download page: http://sourceforge.net/projects/creamake/
#################################################################
 
#################################################################
# User-modifiable options
#################################################################
 
# SOURCE AND COMMONS FOLDERS (separated by spaces)
dir_fuentes = source source/gfortran source/alloc source/vtk source/xml \
source/xread source/sourcelib
 
# OBJECT AND .MOD FOLDER
dir_objetos = object
 
# MAIN SOURCE FILE (include relative path from folder where Makefile is)
condir_principal = 
 
# EXECUTABLE NAME 
ejecutable = libbasicmod.dylib
 
# NEEDED TO convert ejecutable THE DEFAULT RULE: 
$(ejecutable): $(condir_principal) 
 
# MODULES
modulos = module_compiler_gfortran.f90 module_os_dependant.f90 \
module_report.f90 module_set.f90 module_alloc_common.f90 \
module_alloc_char_r1.f90 module_alloc_char_r2.f90 module_convers.f90 \
module_files.f90 module_feed.f90 module_args.f90 module_alloc_int_r1.f90 \
module_alloc_complex64_r1.f90 module_alloc_int_r2.f90 \
module_alloc_complex64_r2.f90 module_alloc_int_r3.f90 module_alloc_log_r1.f90 \
module_alloc_real64_r1.f90 module_alloc_real64_r2.f90 \
module_alloc_real64_r3.f90 module_alloc.f90 module_math.f90 module_system.f90 \
IR_Precision.f90 Lib_VTK_IO.f90 LIB_VTK_IO_READ.f90 module_readPVD.f90 \
module_readVTU.f90 module_writePVD.f90 module_writeVTU.f90 \
module_xml_parser.f90 module_xread.f90 basicmod.f90
 
# MODULE DEPENDENCIES
# if pru1 depends on pru2... pru1.o: pru2.o
module_os_dependant.o: module_compiler_gfortran.o
module_report.o: module_compiler_gfortran.o module_os_dependant.o
module_set.o: module_os_dependant.o module_report.o
module_alloc_common.o: module_compiler_gfortran.o
module_alloc_char_r1.o: module_os_dependant.o module_report.o \
module_alloc_common.o
module_alloc_char_r2.o: module_os_dependant.o module_report.o \
module_alloc_char_r1.o module_alloc_common.o
module_convers.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_alloc_common.o
module_files.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_convers.o
module_feed.o: module_convers.o
module_args.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_convers.o
module_alloc_int_r1.o: module_os_dependant.o module_report.o \
module_alloc_common.o
module_alloc_complex64_r1.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_alloc_common.o module_alloc_int_r1.o
module_alloc_int_r2.o: module_os_dependant.o module_report.o \
module_alloc_int_r1.o module_alloc_common.o
module_alloc_complex64_r2.o: module_os_dependant.o module_report.o \
module_alloc_int_r2.o module_alloc_common.o
module_alloc_int_r3.o: module_os_dependant.o module_report.o \
module_alloc_int_r2.o module_alloc_common.o
module_alloc_log_r1.o: module_os_dependant.o module_report.o \
module_alloc_common.o module_alloc_int_r1.o
module_alloc_real64_r1.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_alloc_common.o module_alloc_int_r1.o
module_alloc_real64_r2.o: module_os_dependant.o module_report.o \
module_alloc_int_r2.o module_alloc_real64_r1.o module_alloc_common.o
module_alloc_real64_r3.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_alloc_int_r2.o module_alloc_common.o
module_alloc.o: module_alloc_int_r1.o module_alloc_int_r2.o \
module_alloc_int_r3.o module_alloc_real64_r1.o module_alloc_real64_r2.o \
module_alloc_real64_r3.o module_alloc_complex64_r1.o \
module_alloc_complex64_r2.o module_alloc_char_r1.o module_alloc_char_r2.o \
module_alloc_log_r1.o
module_math.o: module_compiler_gfortran.o module_report.o module_alloc.o
module_system.o: module_compiler_gfortran.o module_os_dependant.o \
module_report.o module_convers.o module_alloc_char_r1.o module_files.o
Lib_VTK_IO.o: IR_Precision.o
LIB_VTK_IO_READ.o: Lib_VTK_IO.o module_alloc.o
module_readPVD.o: module_compiler_gfortran.o module_report.o module_convers.o \
module_files.o
module_readVTU.o: module_compiler_gfortran.o module_report.o module_alloc.o \
module_convers.o Lib_VTK_IO.o LIB_VTK_IO_READ.o
module_writePVD.o: module_compiler_gfortran.o module_report.o module_convers.o \
module_files.o
module_writeVTU.o: module_report.o module_convers.o Lib_VTK_IO.o
module_xml_parser.o: module_compiler_gfortran.o module_os_dependant.o \
module_alloc.o module_convers.o module_report.o module_files.o
module_xread.o: module_compiler_gfortran.o module_report.o module_convers.o
basicmod.o: module_alloc.o module_args.o module_compiler_gfortran.o \
module_convers.o module_feed.o module_files.o module_math.o \
module_os_dependant.o module_readPVD.o module_readVTU.o module_report.o \
module_set.o module_system.o module_writePVD.o module_writeVTU.o \
module_xml_parser.o module_xread.o
 
# INCLUDES
includes = 
 
# COMPILER
FC = gfortran
 
# COMPILER OPTIONS
FFLAGS = -J$(dir_objetos) -fPIC
 
# LINKER OPTIONS
LDFLAGS = 
 
#################################################################
# Non-modifiable part
#################################################################
 
# SOURCE FOLDERS
VPATH =   $(subst ,:,$(strip $(dir_fuentes)))
vpath %.o $(dir_objetos)
 
# SOURCES
fuentes_ = $(filter %.f %.F %.for %.FOR %.f90 %.F90 %.f95 %.F95 %.f03 %.F03,$(shell ls $(dir_fuentes)))
fuentes  = $(filter-out $(notdir $(condir_principal)) $(modulos),$(fuentes_))
 
# OBJECTS
modulos_obj = $(addsuffix .o,$(basename $(modulos)))
fuentes_obj = $(addsuffix .o,$(basename $(fuentes)))
 
# OBJECTS WITH PATH
condir_modulos_obj = $(addprefix $(dir_objetos)/,$(modulos_obj))
condir_fuentes_obj = $(addprefix $(dir_objetos)/,$(fuentes_obj))
 
# COMPILATION OPTIONS
FFLAGS += $(patsubst %,-I%,$(dir_fuentes))
FFLAGS += -I$(dir_objetos)
 
# MAIN RULE
all: $(ejecutable)
 
# SOURCES RULE
$(fuentes_obj): $(includes) $(modulos_obj)
 
# RULE PATTERNS
%.o:%.f
	$(FC) -c -o $@ $(FFLAGS) $<
	mv $@ $(dir_objetos) 
%.o:%.F
	$(FC) -c -o $@ $(FFLAGS) $< 
	mv $@ $(dir_objetos) 
%.o:%.for
	$(FC) -c -o $@ $(FFLAGS) $< 
	mv $@ $(dir_objetos) 
%.o:%.FOR
	$(FC) -c -o $@ $(FFLAGS) $< 
	mv $@ $(dir_objetos) 
%.o:%.f90
	$(FC) -c -o $@ $(FFLAGS) $< 
	mv $@ $(dir_objetos) 
%.o:%.F90
	$(FC) -c -o $@ $(FFLAGS) $< 
	mv $@ $(dir_objetos) 
 
$(ejecutable): $(modulos_obj)
	$(FC) -dynamiclib  -install_name $(ejecutable) -o $(ejecutable) $(condir_modulos_obj) $(LDFLAGS)
	@mv $(ejecutable) lib/
	@mv object/*.mod include/

.PHONY: cleanlib
cleanlib: clean
	${RM} lib/$(ejecutable)
	${RM} include/*
 
.PHONY: clean
clean:
	$(RM) $(dir_objetos)/*.o      
	$(RM) $(dir_objetos)/*.mod    
	$(RM) $(ejecutable)
